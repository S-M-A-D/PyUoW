[tool.poetry]
name = "pyuow"
version = "0.4.1"
description = "Python custom implementation of unit of work pattern"
authors = ["SMAD"]
maintainers = [
    "Sviatoslav Mosorko <slavikmosorko@gmail.com>",
    "Andrii Divnych <divnycha05@gmail.com>",
]
repository = "https://github.com/S-M-A-D/PyUoW"
homepage = "https://github.com/S-M-A-D/PyUoW"
license = "MIT"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries",
]

readme = "README.md"
include = [
    "pyuow/py.typed"
]

[tool.poetry.urls]
"Tracker" = "https://github.com/S-M-A-D/PyUoW/issues"
"Changelog" = "https://github.com/S-M-A-D/PyUoW/releases"

[tool.poetry.dependencies]
python = "^3.9"
sqlalchemy = {version = "^2.0.36", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
isort = "^5.13.2"
pre-commit = "^4.0.1"
pytest-asyncio = "^0.24.0"
autoflake = "^2.3.1"
mypy = "^1.13.0"
coverage = { version = "^7.6.9", extras = ["toml"] }
black = "^24.10.0"
safety = "^3.2.11"
greenlet = "^3.1.1"
testcontainers = {version = "^4.8.2", extras = ["postgres"]}
asyncpg = "^0.30.0"
psycopg2-binary = [
    {version = "<=2.9.9", python = "<3.10"},
    {version = "^2.9.10", python = ">=3.10"}
]

[tool.poetry.extras]
sqlalchemy = ["sqlalchemy"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
addopts = "-xvrs --color=yes"
junit_family = "xunit2"
testpaths = [
    "tests",
]
markers = [
    "skip_on_ci: mark a test that cannot be executed on CI with unsoported platforms."
]

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
]
concurrency = ["greenlet"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
    "raise NotImplementedError",
]
show_missing = true
skip_covered = true
fail_under = 99

[tool.black]
line-length = 79
target-version = [
    "py39",
]
include = "\\.pyi?$"
exclude = """
    (
      /(
          \\.git
        | \\.venv
      )/
    )"""

[tool.isort]
profile = "black"
line_length = 79

[tool.autoflake]
check = false
in-place = true
recursive = true
expand-star-imports = true
remove-all-unused-imports = true
ignore-init-module-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.mypy]
python_version = "3.9"
strict_optional = true
strict_equality = true
check_untyped_defs = true
no_implicit_optional = true
disallow_any_unimported = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
show_error_codes = true
show_column_numbers = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
